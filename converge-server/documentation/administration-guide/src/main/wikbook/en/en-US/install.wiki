This chapter shows how to obtain and install a binary release of Converge.

= Obtaining Converge =

Converge can be obtained from the [[GetConverge website>>http://www.getconverge.com/download]]
or from the [[SourceForge.net project page>>https://sourceforge.net/projects/convergeecms/]].

= Obtaining dependencies =

* Xuggler 4.0 (must be built from source)
* [[Apache Solr 1.4.1>>http://www.bizdirusa.com/mirrors/apache//lucene/solr/1.4.1/]]
* [[Glassfish 2.1.1>>http://glassfish.java.net/downloads/v2.1.1-final.html]]

= Install Application Server =

* Download and install Glassfish v2.1.1 from http://glassfish.java.net/downloads/v2.1.1-final.html

= Install MySQL Server =

Follow the instructions for your platform on the MySQL website.

= Configure MySQL Server =

1. Open ##my.cnf## (from your MySQL configuration directory) and change the max packet size to 50 MB: {{code}}max_allowed_packet=50M{{/code}}
1. Restart MySQL

= Set-up MySQL Database =

1. Create database for Converge {{code}}CREATE DATABASE converge DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;{{/code}}
1. Grant user access to the database {{code}}GRANT ALL PRIVILEGES ON converge.* TO 'converge'@'localhost' IDENTIFIED BY 'random_password';{{/code}}

= Download and Install the MySQL JDBC driver =

1. Download the MySQL JDBC driver from http://dev.mysql.com/downloads/connector/j/
1. Extract the downloaded archive (##mysql-connector-java-5.x.y.zip##)
1. Copy the JDBC jar file (##mysql-connector-java-5.x.y.jar##) to ##%GLASSFISH_HOME%/domains/domain1/lib##
1. Restart Glassfish

= Configure Application Server =

Go to the administrative console (http://localhost:4848 with username ##admin## and password ##adminadmin## by default)

== Create Security Realm ==

1. Go to Configuration - Security - Realms
1. Follow the instructions below for your flavour of LDAP.

=== Plain LDAP ===

1. Create a Security Realm named: ##Converge##
1. Class name: ##com.sun.enterprise.security.auth.realm.ldap.LDAPRealm##
1. JAAS Context: ##ldapRealm##
1. Directory: ##ldap://localhost:1389 ## (adjust to match production environment)
1. Base DN: ##ou=people,dc=mytimes,dc=com##  (adjust to match production environment)
1. Add property ##group-base-dn## with value ##ou=groups,dc=mytimes,dc=com## (adjust to match production environment)

* Links
** http://blogs.sun.com/treydrake/entry/glassfish_opends_integration

=== Microsoft Active Directory (Windows 2003) ===

1. Create a Security Realm named: ##Converge##
1. Class name: ##com.sun.enterprise.security.auth.realm.ldap.LDAPRealm##
1. JAAS Context: ##ldapRealm##
1. Directory: ##ldap://192.168.0.1:3268 ##  (adjust to match production environment)
1. Base DN: ##dc=smallbusiness,dc=local## (adjust to match production environment)
1. Add property ##search-filter## with value ##(&(objectClass=user)(sAMAccountName=%s))##
1. Add property ##group-search-filter## with value ##(&(objectClass=group)(member=%d))##
1. Add property ##search-bind-dn## with value containing the distinguished name of the administrative user used for connecting to the directory
1. Add property ##search-bind-password## with value containing the password of the administrative user used for connecting to the directory

//Notes//

To find details about your Active Directory setup, open the Active Directory 
Users and Computers. The base of the directory is based on the domain name. e.g.
if you have a domain name ##smallbusiness.local##, the base would be 
##DC=smallbusiness,DC=local##

The administrator would then typically have the following distinguished name
(DN): ##CN=Administrator,CN=Users,DC=smallbusiness,DC=local##

== Create Connection Pool ==

1. Click Resources - JDBC - Connection Pools
1. Click New...
1. Enter ##ConvergePool## as the name of the JDBC Connection Pool
1. Select ##javax.sql.DataSource## as the Resource Type
1. Select ##MySQL## as the Database Vendor
1. Click Next
1. Scroll down to Additional Properties and set the following properties
11. ##CharacterEncoding## = ##UTF8##
11. ##DatabaseName## = ##converge## (match the database set-up in MySQL)
11. ##Password## = ##converge## (match the password set-up for the database in MySQL)
11. ##ServerName## = ##localhost## (match the host name of the MySQL server)
11. ##URL## = ##jdbc:mysql://localhost:3306/converge ## (Replace localhost and converge with the host and database name)
11. ##Url## = ##jdbc:mysql://localhost:3306/converge ## (Replace localhost and converge with the host and database name)
11. ##User## = ##converge## (match the username set-up for the database in MySQL)
1. Click Finish
1. Verify the settings of the Connection Pool by clicking ##ConvergePool## followed by clicking the Ping button

== Create JDBC Resource ==

1. Click Resources - JDBC - JDBC Resources
1. Click New...
1. Enter ##jdbc/converge## as the JNDI name
1. Select ##ConvergePool## as the Pool name
1. Click OK

== Create JavaMail Session ==

1. Click Resources - JavaMail Sessions
1. Click New...
1. Enter ##mail/converge## as the JNDI name
1. Enter ##localhost## as the Mail host (or the hostname of your mail server)
1. Enter ##converge## as the Default User (or the username required to connect to your mail server)
1. Enter ##converge@example.com## as the Default Return Address (or the default return e-mail address of your mail domain)
1. If your mail server is on a non-standard port, you can add the SMTP port in the additional settings:
11. ##mail.smtp.port## = ##1025## (Replace 1025 with the port of your SMTP server)

== Create JMS Resources ==

1. Click Resources - JMS Resources - Connection Factories
1. Click New..
1. Enter ##jms/connectionFactory## as the JNDI Name
1. Select ##javax.jms.QueueConnectionFactory## as the Resource Type
1. Set the Idle Timeout to ##600## Seconds
1. Click OK (this will save the connection factory)
1. Click Resources - JMS Resources - Destination Resources
1. Click New...
1. Enter ##jms/editionServiceQueue## as the JNDI Name
1. Enter ##editionServiceQueue## as the Physical Destination Name
1. Select ##javax.jms.Queue## as the Resource Type
1. Click OK
1. Click New...
1. Enter ##jms/newswireServiceQueue## as the JNDI Name
1. Enter ##newswireServiceQueue## as the Physical Destination Name
1. Select ##javax.jms.Queue## as the Resource Type
1. Click OK

== Configuring Apache Solr ==

1. Click Application Server - JVM Settings - JVM Options
1. Add the option: ##-Dsolr.solr.home=/home/converge/solr/## (pointing to the Solr configuration directory)
1. Add the option: ##-Dsolr.solr.data=/home/converge/solr-data/## (pointing to the Solr data/index directory)

== Configuring Memory Usage ==

1. Click Application Server - JVM Settings - JVM Options
1. Add (or update) the option: ##-Xmx6144m## with ##6144m## being the number of megabytes RAM to assign to the Java Virtual Machine. Note, don't set it higher than the available RAM as it will cause the server to start swapping heavily if the memory is used.
1. Add (or update) the option: ##-XX:MaxPermSize=500m##

== Install Apache Solr ==

1. Create a directory ##/home/converge/solr/## (or which ever folder was specified in the application server JVM settings above)
1. Extract all files from ##UNPACK_DIR/solr.zip## to ##/home/converge/solr/##


== Building Xuggler from Scratch (Ubuntu) ==

 1. Log into the Ubuntu box
 1. Download the dependencies ##sudo apt-get install libavcodec-extra-52 libavdevice-extra-52 libavfilter-extra-0 libavformat-extra-52 libavutil-extra-49 libpostproc-extra-51 libswscale-extra-0 ant gcc yasm-1 openssl pkg-config perl g++ build-essential libstdc++6 git-core##
 1. (On Ubuntu 10.04 and earlier): ##sudo ln -s /usr/bin/yasm-1 /usr/bin/yasm##
 1. Download the Xuggle source: ##git clone git://github.com/xuggle/xuggle-xuggler.git##
 1. Build the Xuggle sources: ##ant clobber stage##
 1. Run the Xuggle tests: ##ant run-tests##
 1. Install the compile code into the O/S: ##sudo ant install##


= Deploy =

Deploy Converge by copying ##converge.ear## (Downloaded from SourceForge or 
GetConverge.com) to ##%GLASSFISH_HOME%/domains/domain1/autodeploy##. Check the 
server log for any errors as you are deploying: 
##%GLASSFISH_HOME%/domains/domain1/logs/server.log##

